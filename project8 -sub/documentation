	My program consists of three implementations of a stack class. The first implementation, stack1, is an array-based stack in which the top of the stack stays where it is. The second implementation, stack2, is also an array based stack, but this one top moves up when an item is pushed on to it and down when an item is popped off of it. The third implementation, stack 3, is a node-based stack in which each item is stored in a node along with the address of the next node, which allows for linking. All 3 of these implementations look very similar and perform the exact same function, but they are done a little bit differently. In stack1, the top value stays where it is, so it’s value changes as the rest of the stack shifts down or up. Though the concept of stack1 sounds very simple, it’s actually much more complicated to implement than stack2 because of how the whole array needs to be shifted. Stack2 is very simple because only one value, top, is moving. The rest of the items in the stack are being added and removed just like in a normal array. The basis of stack2 is much more similar to how you would imagine a stack working in real life. You place an item down, and then keep adding on to it. Top doesn’t stay at the bottom. Top moves up as you add things to it. Stack3, however, is a little bit more complex. I didn’t have that many problems with it once I figured out how it worked. It’s just very different than what I am used to, which is working with arrays. One problem I had that I still haven’t been able to solve is my assignment operator function is a bit messed up. It makes the second stack equal to the first one, but it adds some characters in the mix as well. I don’t really know why this is happening, but I assume it something to do with how I am decrementing my cursor, which is a pointer that I have moving from the top down. I don’t get an error when it runs, but this adding of characters does happen. Everything else works perfectly fine though from the looks of it. I’ve ran numerous tests and all three implementations have passed every one. If I had more time, I would figure out why I am getting this strange error from my assignment operator function. I would also probably not decrement cursor in some of the other functions as well. This method doesn’t appear to be the most efficient way.

