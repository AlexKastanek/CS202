The purpose of these programs is to build a String library using a String class and implement and test the code for that class in a test driver. The String class has multiple public functions and two private variables that can all act on any char array and convert that into a string. The public functions are initialize, deallocate, copy, concat, compare, length, and print, all of which can be useful at any time. The private variables are buffer (a char array) and wordLength (an int). Initialize gets buffer and wordLength from the passed array. Deallocate simply deallocates buffer and sets its pointer to NULL. Copy deallocates the object’s buffer, reallocates according to the size of the passed array, and copies the passed array into it. Concat deallocates the object’s buffer, reallocates it to the original size plus the size of the passed array, and appends the passed array onto buffer. Length returns wordLength. Print simply prints buffer. The test driver displays all of these working with two instances of objects as well as with an array of objects. A problem I had with my code that I was never able to solve was when I concat an array of objects at the array’s full size, it works but the program exits with an error saying “double free or corruption.” I thought maybe I had deallocated something twice or tried to use something that was deallocated, but I could not figure out my problem. I tried using Valgrind but I had no memory leaks at all. It seemed very strange. If I had more time I would spend it trying to solve this problem. I would also ask a TA to take a look at it and seeing if he could spot a problem that I couldn’t. I didn’t have any problems with the make file and once I finished initialization, it seemed pretty straightforward from there. I only encountered a couple random bugs other than the double free or corruption error, and they were all easy to fix. Next time, I am going to write my functions more carefully and test everything, so I don’t find this error at the end again and am stuck with trying to fix it in a short amount of time.

